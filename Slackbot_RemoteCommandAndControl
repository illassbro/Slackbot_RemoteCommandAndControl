[[ Make a Command & Control Slackbot ]]

This proof of concept is a "remote shell" via Slack. You can make the Bot respond and run any command/script you like on the OS and return the reults to slack.
For Example: "uname", "nslookup", "whois", "pwd", "hostname", "ifconfig", "ip", "uptime", "last", "tail"



## MAKE AN ACCOUNT/CHANNEL
## 
##

https://slack.com/
https://yourworkspace.slack.com


## MAKE A BOT
## 
##

## Go to the APPS in yourworkspace
https://yourworkspace.slack.com/apps

#NOTE: Copy the API Token
API_Token='<API Token>'

## ON_SLACK_CHANNEL(Invite your BOT): /invite @<YOUR_BOT_NAME>
/invite @YOUR_BOT_NAME



## SETUP BUILD ENV  
##
##

## Get Slacklet LIB + Deps
sudo mkdir -p ~/JAVA_SLACK_BOT/
sudo chown oem:oem ~/JAVA_SLACK_BOT/
cd ~/JAVA_SLACK_BOT/

wget --no-check-certificate 'https://repo1.maven.org/maven2/org/riversun/slacklet/1.0.4/slacklet-1.0.4.jar'
#https://github.com/riversun/slacklet/blob/master/pom.xml
jar -tvf slacklet-1.0.4.jar

wget --no-check-certificate 'https://repo1.maven.org/maven2/com/google/code/gson/gson/2.6.2/gson-2.6.2.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/javax/websocket/javax.websocket-api/1.1/javax.websocket-api-1.1.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/javax/websocket/javax.websocket-client-api/1.1/javax.websocket-client-api-1.1.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4/httpcore-4.4.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.4/httpclient-4.4.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/org/apache/httpcomponents/httpmime/4.4/httpmime-4.4.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/org/glassfish/tyrus/bundles/tyrus-standalone-client/1.13/tyrus-standalone-client-1.13.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/org/threeten/threetenbp/1.3.1/threetenbp-1.3.1.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/commons-codec/commons-codec/1.9/commons-codec-1.9.jar'
wget --no-check-certificate 'https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar'

ls


## BUILD & TEST CODE
## 
##

sudo mkdir -p ~/JAVA_SLACK_BOT/
sudo chown yourusername:yourgroupname ~/JAVA_SLACK_BOT/
cd ~/JAVA_SLACK_BOT/

git clone https://github.com/illassbro/Slackbot_RemoteCommandAndControl.git
cp Slackbot_RemoteCommandAndControl/slackCommand.java .
ls

API_Token='<API Token>'
CHANNEL='YourChannelName'
CODE=slackCommand
CLASSPATH='.:slacklet-1.0.4.jar:gson-2.6.2.jar:javax.websocket-api-1.1.jar:javax.websocket-client-api-1.1.jar:httpcore-4.4.jar:httpclient-4.4.jar:httpmime-4.4.jar:tyrus-standalone-client-1.13.jar:threetenbp-1.3.1.jar:commons-codec-1.9.jar:commons-logging-1.2.jar'

sed -i '/public static String botToken/s/".*"/"'"${API_Token}"'"/' slackCommand.java
sed -i '/public static String channelName/s/".*"/"'"${CHANNEL}"'"/' slackCommand.java

# BUILD & RUN CODE
javac -cp ${CLASSPATH} ${CODE}.java && java -cp ${CLASSPATH} ${CODE}





## ADD COMMAND(s) TO BOT
## 
## 

mkdir -p /JAVA_SLACK_BOT/
cd /JAVA_SLACK_BOT/

CODE=slackCommand

ADD="file"
sed -i '/\/\/ADD_COMMANDS_HERE/s/....ADD_COMMANDS_HERE/, "'"${ADD}"'"&/' ${CODE}.java 

ADD="cat \/proc\/meminfo"
sed -i '/\/\/ADD_COMMANDS_HERE/s/....ADD_COMMANDS_HERE/, "'"${ADD}"'"&/' ${CODE}.java 

ADD="cat \/var\/log\/dmesg"
sed -i '/\/\/ADD_COMMANDS_HERE/s/....ADD_COMMANDS_HERE/, "'"${ADD}"'"&/' ${CODE}.java 

# (re)BUILD & RUN CODE
javac -cp ${CLASSPATH} ${CODE}.java && java -cp ${CLASSPATH} ${CODE}





## RUN CODE AS A SERVICE: ADD TO SYSTEMD
## 
## 

mkdir -p /etc/systemd/system/
touch /etc/systemd/system/slackbot.service

cat <<EOF>  /etc/systemd/system/slackbot.service
[Unit]
Description=slackCommand

[Service]
Restart=always
User=nobody
WorkingDirectory=/JAVA_SLACK_BOT
CLASSPATH='.:slacklet-1.0.4.jar:gson-2.6.2.jar:javax.websocket-api-1.1.jar:javax.websocket-client-api-1.1.jar:httpcore-4.4.jar:httpclient-4.4.jar:httpmime-4.4.jar:tyrus-standalone-client-1.13.jar:threetenbp-1.3.1.jar:commons-codec-1.9.jar:commons-logging-1.2.jar'
ExecStart=/usr/bin/java -Xmx256m -cp ${CLASSPATH} slackCommand
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target
EOF


## START SERVICE
systemctl daemon-reload
systemctl enable slackbot.service
systemctl start slackbot
systemctl status slackbot
#systemctl stop slackbot
netstat -planet | grep java


## DUMP LOGS
journalctl -u slackbot.service --no-pager

## TAIL/WATCH LOGS
journalctl -u slackbot.service --no-pager -f


